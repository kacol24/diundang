"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Mutation {
    checkIn(
        guest_code: String!
        sequence_group: String
    ): Invitation @field(resolver: "CheckIn")
}

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    invitations: [Invitation!]! @all @orderBy(column: "name", direction: ASC)

    groupedInvitations: [GroupedInvitation!]! @field(resolver: "GroupedInvitations")

    attendances(
        limit: Int @limit
        sequence_group: String @where(clause: "whereSequenceGroup")
    ): [Attendance!]! @all @orderBy(column: "created_at", direction: DESC)
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type GroupedInvitation {
    key: String!
    invitations: [Invitation!]!
}

type Invitation {
    id: ID
    guest_code: String
    name: String!
    title: String
    full_name: String
    phone: String
    guests: Int
    pax: Int
    is_family: Boolean
    seating: Seating @belongsTo
    attendance: Attendance @hasOne
    group: Group @belongsTo
}

type Group {
    name: String
    group_name: String
}

type Seating {
    name: String!
    plan_image_url: String
}

type Attendance {
    invitation: Invitation @belongsTo
    sequence: Int
    sequence_group: String
    serial_number: String!
    created_at: DateTime
}
